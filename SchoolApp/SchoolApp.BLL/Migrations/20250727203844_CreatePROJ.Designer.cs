// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.BLL.Data.Contexts;

#nullable disable

namespace SchoolApp.BLL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250727203844_CreatePROJ")]
    partial class CreatePROJ
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolApp.DAL.Entities.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("CUID");

                    b.Property<string>("AreaId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("AREAID");

                    b.Property<string>("BirthDateString")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BIRTHDATE");

                    b.Property<string>("Classroom")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CLASSROOM");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditLimit")
                        .HasColumnType("int")
                        .HasColumnName("CREDIT_LIMIT");

                    b.Property<byte?>("Depart")
                        .HasColumnType("tinyint")
                        .HasColumnName("DEPART");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("CUNM_E");

                    b.Property<string>("GradesId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GRADESID");

                    b.Property<string>("IdEndDateString")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IDENDDATE");

                    b.Property<string>("IdIssueDateString")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IDISSIODATE");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IDNUM");

                    b.Property<string>("IdPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDPLACE");

                    b.Property<byte?>("IsGraduate")
                        .HasColumnType("tinyint")
                        .HasColumnName("ISGRADUATE");

                    b.Property<byte?>("IsNewYear")
                        .HasColumnType("tinyint")
                        .HasColumnName("ISNEWYEAR");

                    b.Property<string>("Location")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("Mobile1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Mobile1");

                    b.Property<string>("Mobile2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Mobile2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("CUNM");

                    b.Property<string>("NationalId")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("NATID");

                    b.Property<byte?>("NextGrade")
                        .HasColumnType("tinyint")
                        .HasColumnName("NEXTGRADE");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOTE");

                    b.Property<string>("Passport")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PASSPORT");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone");

                    b.Property<string>("Respons")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("RESPONS");

                    b.Property<string>("SchoolId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SCHOOLID");

                    b.Property<string>("StagesId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STAGESID");

                    b.Property<string>("StopSms")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("STOPSMS");

                    b.Property<string>("StudentIdNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("STUDIDNUM");

                    b.Property<string>("StudentImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STUDIMG");

                    b.Property<byte?>("StudentSex")
                        .HasColumnType("tinyint")
                        .HasColumnName("STUDSEX");

                    b.Property<string>("StudentStatusId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STUDENTSTATUSID");

                    b.Property<byte?>("SuspendAccount")
                        .HasColumnType("tinyint")
                        .HasColumnName("SUSPIND_AC");

                    b.Property<string>("SuspendDateString")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SUSPINDDATE");

                    b.Property<string>("TypeId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TYPEID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("VECHID");

                    b.HasKey("Id");

                    b.HasIndex("IdNumber")
                        .IsUnique()
                        .HasFilter("[IDNUM] IS NOT NULL");

                    b.HasIndex("Passport")
                        .IsUnique()
                        .HasFilter("[PASSPORT] IS NOT NULL");

                    b.ToTable("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
